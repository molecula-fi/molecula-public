{
    "version": "1.0.0",
    "private": true,
    "workspaces": [
        "backend/*",
        "backend/packages/*",
        "backend-nest/*",
        "backend-nest/packages/*",
        "blockchain/*",
        "blockchain/packages/*",
        "common/*",
        "configs/*",
        "frontend/*",
        "frontend/packages/*",
        "middleware/*",
        "middleware/packages/*",
        "tests",
        "ui-tests",
        "ui-tests/integration-tests",
        "ui-tests/api-tests"
    ],
    "scripts": {
        "bump": "yarn version --no-commit-hooks --no-git-tag-version && yarn bump-to && yarn workspace @molecula-monorepo/dev-expo bump && yarn workspace @molecula-monorepo/dev-expo-pool-admin bump",
        "bump-to": "yarn workspaces run bump-to $npm_package_version",
        "prepare": "husky install",
        "pre-commit": "./pre-commit.sh",
        "pre-merge": "./pre-merge.sh",
        "reinstall": "./reinstall.sh",
        "postinstall": "./postinstall.sh",
        "docker-network:create": "docker network create -d bridge proxy_nw",
        "deduplicate": "yarn yarn-deduplicate -s fewer yarn.lock",
        "secret:reveal": "git secret reveal -f",
        "secret:hide": "git secret hide -m && git add *.secret",
        "cycles:check": "ts-node scripts/checkCircularDependencies",
        "turbo": "dotenvx run --env-file=./configs/turbo-environments/.env --quiet -- turbo",
        "turbo:merge": "dotenvx run --env-file=./configs/turbo-environments/.env.merge --env-file=./configs/turbo-environments/.env --quiet -- turbo",
        "integrationTests": "yarn workspace @molecula-monorepo/tests run integrationTests",
        "ui-tests": "yarn workspace @molecula-monorepo/ui-tests run test",
        "eslint:fix": "eslint --fix scripts *.js --resolve-plugins-relative-to .",
        "prettier:fix": "prettier --write scripts *.js",
        "fix:code": "yarn run eslint:fix && yarn run prettier:fix && yarn turbo run eslint:fix && yarn turbo run prettier:fix",
        "natspec:check": "natspec-smells",
        "cache:clean": "yarn cache clean && rm -rf /usr/local/share/.cache/yarn/v6",
        "ton-exchanger-evm-manual:build": "docker build --tag ton-exchanger-evm-manual:$npm_package_version -f backend/ton-exchanger-evm-manual/.Dockerfile .",
        "tron-exchanger-evm-retail:build": "docker build --tag tron-exchanger-evm-retail:$npm_package_version -f backend/tron-exchanger-evm-retail/.Dockerfile .",
        "tron-bridge-evm-retail:build": "docker build --tag tron-bridge-evm-retail:$npm_package_version -f backend/tron-bridge-evm-retail/.Dockerfile .",
        "evm-tracker-evm-retail:build": "docker build --tag evm-tracker-evm-retail:$npm_package_version -f backend/evm-tracker-evm-retail/.Dockerfile .",
        "evm-token-tracker-retail:build": "docker build --tag evm-token-tracker-retail:$npm_package_version -f backend/evm-token-tracker-retail/.Dockerfile .",
        "tron-tracker-evm-retail:build": "docker build --tag tron-tracker-evm-retail:$npm_package_version -f backend/tron-tracker-evm-retail/.Dockerfile .",
        "tron-confirmer-evm-retail:build": "docker build --tag tron-confirmer-evm-retail:$npm_package_version -f backend/tron-confirmer-evm-retail/.Dockerfile .",
        "evm-confirmer-evm-retail:build": "docker build --tag evm-confirmer-evm-retail:$npm_package_version -f backend/evm-confirmer-evm-retail/.Dockerfile .",
        "ton-pool-evm-total:build": "docker build --tag ton-pool-evm-total:$npm_package_version -f backend/ton-pool-evm-total/.Dockerfile .",
        "info-service:build": "docker build --tag info-service:$npm_package_version -f backend/info-service/.Dockerfile .",
        "website:start": "yarn workspace @molecula-monorepo/frontend.website start:k8s -p 8080",
        "rpc-proxy:build": "docker build --tag rpc-proxy:$npm_package_version -f backend/rpc-proxy/.Dockerfile .",
        "terraform:fmt": "dotenvx run --env-file=./configs/frontend-environments/shared/.env --quiet -- terraform -chdir=./frontend/web-infrustructure fmt",
        "terraform:init": "dotenvx run --env-file=./configs/frontend-environments/shared/.env --quiet -- terraform -chdir=./frontend/web-infrustructure init",
        "terraform:lint": "dotenvx run --env-file=./configs/frontend-environments/shared/.env --quiet -- terraform -chdir=./frontend/web-infrustructure validate",
        "terraform:set_default": "dotenvx run --env-file=./configs/frontend-environments/shared/.env --quiet -- terraform -chdir=./frontend/web-infrustructure workspace select default",
        "terraform:set_prod": "dotenvx run --env-file=./configs/frontend-environments/shared/.env.production --quiet --env-file=./configs/frontend-environments/shared/.env -- terraform -chdir=./frontend/web-infrustructure workspace select production",
        "terraform:plan_staging": "dotenvx run --env-file=./configs/frontend-environments/shared/.env --env-file=./configs/frontend-environments/website/.env --env-file=./configs/frontend-environments/retail/.env --quiet -- terraform -chdir=./frontend/web-infrustructure plan",
        "terraform:plan_prod": "dotenvx run --env-file=./configs/frontend-environments/shared/.env.production --env-file=./configs/frontend-environments/shared/.env --env-file=./configs/frontend-environments/website/.env.production --env-file=./configs/frontend-environments/website/.env --env-file=./configs/frontend-environments/retail/.env.production --env-file=./configs/frontend-environments/retail/.env --quiet -- terraform -chdir=./frontend/web-infrustructure plan",
        "terraform:apply_staging": "dotenvx run --env-file=./configs/frontend-environments/shared/.env --env-file=./configs/frontend-environments/website/.env --env-file=./configs/frontend-environments/retail/.env -- terraform -chdir=./frontend/web-infrustructure apply --auto-approve",
        "terraform:apply_prod": "dotenvx run --env-file=./configs/frontend-environments/shared/.env.production --env-file=./configs/frontend-environments/shared/.env --env-file=./configs/frontend-environments/website/.env.production --env-file=./configs/frontend-environments/website/.env --env-file=./configs/frontend-environments/retail/.env.production --env-file=./configs/frontend-environments/retail/.env --quiet -- terraform -chdir=./frontend/web-infrustructure apply --auto-approve",
        "terraform:staging:plan": "yarn terraform:set_default && yarn terraform:plan_staging",
        "terraform:prod:plan": "yarn terraform:set_prod && yarn terraform:plan_prod",
        "terraform:staging:apply": "yarn terraform:set_default && yarn terraform:apply_staging",
        "terraform:prod:apply": "yarn terraform:set_prod && yarn terraform:apply_prod",
        "terraform:staging:state": "yarn terraform:set_default && dotenvx run --env-file=./configs/frontend-environments/shared/.env --quiet -- terraform -chdir=./frontend/web-infrustructure state pull > tfState.json",
        "terraform:prod:state": "yarn terraform:set_prod && dotenvx run --env-file=./configs/frontend-environments/shared/.env.production --env-file=./configs/frontend-environments/shared/.env --quiet -- terraform -chdir=./frontend/web-infrustructure state pull > tfState.json",
        "terraform:staging": "yarn terraform:staging:apply && yarn rpc-proxy:staging:deploy && yarn feature-flags-sync-service:staging:deploy",
        "terraform:prod": "yarn terraform:prod:apply && yarn rpc-proxy:prod:deploy && yarn feature-flags-sync-service:prod:deploy",
        "prepare-web-deploy:parse": "ts-node scripts/prepareWranglerToDeploy",
        "prepare-web-deploy": "./scripts/prepareWranglerToDeploy.sh",
        "rpc-proxy:deploy": "yarn prepare-web-deploy && yarn workspace @molecula-monorepo/frontend.rpc-proxy deploy",
        "rpc-proxy:staging:deploy": "yarn terraform:staging:state && dotenvx run --env-file=./configs/frontend-environments/shared/.env --quiet -- yarn rpc-proxy:deploy",
        "rpc-proxy:prod:deploy": "yarn terraform:prod:state && dotenvx run --env-file=./configs/frontend-environments/shared/.env.production --env-file=./configs/frontend-environments/shared/.env --quiet -- yarn rpc-proxy:deploy",
        "feature-flags-sync-service:deploy": "yarn prepare-web-deploy && yarn workspace @molecula-monorepo/frontend.feature-flags-sync-service deploy",
        "feature-flags-sync-service:staging:deploy": "yarn terraform:staging:state && dotenvx run --env-file=./configs/frontend-environments/shared/.env --env-file=./configs/frontend-environments/website/.env --env-file=./configs/frontend-environments/retail/.env --quiet -- yarn feature-flags-sync-service:deploy",
        "feature-flags-sync-service:prod:deploy": "yarn terraform:prod:state && dotenvx run --env-file=./configs/frontend-environments/shared/.env.production --env-file=./configs/frontend-environments/shared/.env --env-file=./configs/frontend-environments/website/.env.production --env-file=./configs/frontend-environments/website/.env --env-file=./configs/frontend-environments/retail/.env.production --env-file=./configs/frontend-environments/retail/.env --quiet -- yarn feature-flags-sync-service:deploy",
        "frontend:prepare": "yarn terraform:init && yarn terraform:staging:state && dotenvx run --env-file=./configs/frontend-environments/shared/.env --env-file=./configs/frontend-environments/website/.env --quiet -- yarn prepare-web-deploy",
        "website:deploy": "yarn prepare-web-deploy && yarn workspace @molecula-monorepo/frontend.website deploy",
        "website:deploy:staging": "yarn terraform:staging:state && dotenvx run --env-file=./configs/frontend-environments/shared/.env --env-file=./configs/frontend-environments/website/.env --quiet -- yarn website:deploy",
        "website:deploy:prod": "yarn terraform:prod:state && dotenvx run --env-file=./configs/frontend-environments/shared/.env.production --env-file=./configs/frontend-environments/shared/.env --env-file=./configs/frontend-environments/website/.env.production --env-file=./configs/frontend-environments/website/.env --quiet -- yarn website:deploy",
        "website:dev:prepare": "yarn terraform:staging:state && dotenvx run --env-file=./configs/frontend-environments/shared/.env --env-file=./configs/frontend-environments/website/.env --quiet -- yarn prepare-web-deploy",
        "website:dev": "yarn website:dev:prepare && yarn workspace @molecula-monorepo/frontend.website dev",
        "retail:dev:prepare": "yarn terraform:staging:state && dotenvx run --env-file=./configs/frontend-environments/shared/.env --env-file=./configs/frontend-environments/retail/.env --quiet -- yarn prepare-web-deploy",
        "retail:dev": "yarn retail:dev:prepare && yarn workspace @molecula-monorepo/frontend.retail dev",
        "retail:deploy": "yarn prepare-web-deploy && yarn workspace @molecula-monorepo/frontend.retail deploy",
        "retail:deploy:staging": "yarn terraform:staging:state && dotenvx run --env-file=./configs/frontend-environments/shared/.env --env-file=./configs/frontend-environments/retail/.env --quiet -- yarn retail:deploy",
        "retail:deploy:prod": "yarn terraform:prod:state && dotenvx run --env-file=./configs/frontend-environments/shared/.env.production --env-file=./configs/frontend-environments/shared/.env --env-file=./configs/frontend-environments/retail/.env.production --env-file=./configs/frontend-environments/retail/.env --quiet -- yarn retail:deploy",
        "test:docker:compose": "NEXT_BUILD_USE_SENTRY=false NEXT_PUBLIC_ENV=prod yarn workspace @molecula-monorepo/frontend.docker-test build && docker-compose -f frontend/docker-test/docker-compose.yml up --build",
        "test:docker:build": "NEXT_BUILD_USE_SENTRY=false NEXT_PUBLIC_ENV=prod yarn workspace @molecula-monorepo/frontend.docker-test build && docker build -f frontend/docker-test/Dockerfile ./frontend/docker-test",
        "deploy:dev": "./set_deploy.sh -s dev",
        "deploy:dev:front": "./set_deploy.sh -s dev -c front",
        "deploy:dev:front:expo": "./set_deploy.sh -s dev -c front -f expo",
        "deploy:dev:front:admin": "./set_deploy.sh -s dev -c front -f admin",
        "deploy:dev:back": "./set_deploy.sh -s dev -c back",
        "deploy:beta": "./set_deploy.sh -s beta",
        "deploy:beta:front": "./set_deploy.sh -s beta -c front",
        "deploy:beta:front:expo": "./set_deploy.sh -s beta -c front -f expo",
        "deploy:beta:front:admin": "./set_deploy.sh -s beta -c front -f admin",
        "deploy:beta:back": "./set_deploy.sh -s beta -c back",
        "deploy:alpha": "./set_deploy.sh -s alpha",
        "deploy:alpha:front": "./set_deploy.sh -s alpha -c front",
        "deploy:alpha:front:expo": "./set_deploy.sh -s alpha -c front -f expo",
        "deploy:alpha:front:admin": "./set_deploy.sh -s alpha -c front -f admin",
        "deploy:alpha:back": "./set_deploy.sh -s alpha -c back",
        "deploy:prod": "./set_deploy.sh -s prod",
        "deploy:prod:front": "./set_deploy.sh -s prod -c front",
        "deploy:prod:front:expo": "./set_deploy.sh -s prod -c front -f expo",
        "deploy:prod:front: admin": "./set_deploy.sh -s prod -c front -f admin",
        "deploy:prod:back": "./set_deploy.sh -s prod -c back",
        "deploy:website:staging": "./set_website_deploy.sh staging",
        "deploy:website:prod": "./set_website_deploy.sh prod"
    },
    "devDependencies": {
        "@defi-wonderland/natspec-smells": "^1.1.6",
        "@types/circular-dependency-plugin": "^5.0.5",
        "circular-dependency-plugin": "^5.2.2",
        "concurrently": "^9.0.1",
        "dpdm": "^3.13.1",
        "husky": "^8.0.1",
        "patch-package": "^6.4.7",
        "prettier": "^3.2.5",
        "prettier-plugin-solidity": "^1.4.1",
        "solhint": "^5.0.5",
        "ts-node": "^10.9.2",
        "turbo": "^2.5.1",
        "typescript": "^5.4.5",
        "yarn-deduplicate": "^6.0.0"
    },
    "dependencies": {
        "@molecula-monorepo/eslint-config-shared": "*",
        "@molecula-monorepo/prettier-config-shared": "*",
        "@molecula-monorepo/tsconfig-shared": "*"
    },
    "resolutions": {
        "@typescript-eslint/eslint-plugin": "7.2.0",
        "@typescript-eslint/parser": "7.2.0",
        "@typescript-eslint/utils": "7.2.0",
        "@vercel/fun": "1.1.1",
        "@walletconnect/ethereum-provider": "2.17.1",
        "elliptic": "^6.6.1",
        "ethers": "^6.13.5",
        "lightningcss": "~1.22.0",
        "solc-typed-ast": "18.2.4",
        "viem": "^2.21.0"
    },
    "packageManager": "yarn@1.22.22"
}
