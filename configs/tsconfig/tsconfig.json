{
    "compilerOptions": {
        "allowSyntheticDefaultImports": true,
        "experimentalDecorators": true,
        "emitDecoratorMetadata": true,
        "resolveJsonModule": true,
        "composite": false,
        "allowUnreachableCode": false,
        "allowUnusedLabels": false,
        "esModuleInterop": true,
        "exactOptionalPropertyTypes": true,
        "forceConsistentCasingInFileNames": true,
        "verbatimModuleSyntax": true,
        "isolatedModules": true,
        "jsx": "react-jsx",
        "lib": ["es2020", "dom"],
        "module": "es2020",
        "moduleResolution": "node",
        "noEmit": true,
        "noFallthroughCasesInSwitch": true,
        "noImplicitReturns": true,
        "noImplicitUseStrict": false,
        "noStrictGenericChecks": false,
        "noUncheckedIndexedAccess": true,
        "noUnusedLocals": true,
        "noUnusedParameters": true,
        "skipLibCheck": true,
        "strict": true,
        "target": "es2020",
        "useUnknownInCatchVariables": false,
        "typeRoots": [
            // Include all packages under "@types/",
            // which should be included automatically
            // but only in case the "typeRoots" property is not specified
            // See: https://www.typescriptlang.org/tsconfig#typeRoots
            "./node_modules/@types",
            "../node_modules/@types",
            "../../node_modules/@types",
            "../../../node_modules/@types"
        ]
    },
    "ts-node": {
        "compilerOptions": {
            "module": "CommonJS",
            /**
             * Scripts are executed using ts-node in a CommonJS environment.
             * To avoid "error TS1286: ESM syntax is not allowed in a CommonJS module when 'verbatimModuleSyntax' is enabled." error,
             * we set verbatimModuleSyntax to false.
             */
            "verbatimModuleSyntax": false
        }
    },
    "include": ["**/*.ts", "**/*.tsx", "**/*.json"]
}
